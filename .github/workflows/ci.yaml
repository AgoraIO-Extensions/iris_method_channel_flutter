name: CI check

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on: pull_request

jobs:
  flutter_codestyle_check:
    name: pub.dev scores check
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'ci:skip') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: axel-op/dart-package-analyzer@v3
        id: analysis
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
      - name: Check scores
        env:
          TOTAL: ${{ steps.analysis.outputs.total }}
          TOTAL_MAX: ${{ steps.analysis.outputs.total_max }}
        run: |
          if (( $TOTAL < 130 ))
          then
            echo Pub Score too low.
            exit 1
          fi

  pub_publish_check:
    name: pub publish check
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'ci:skip') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.7.0'
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:' # optional, change this to force refresh cache
          cache-path: '${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:' # optional, change this to specify the cache path
      - run: bash tool/scripts/dart_pub_publish_check.sh

  build_windows:
    name: Build Windows
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'ci:skip') }}
    strategy:
      matrix:
        version: ['2.10.5', '3.0.0', '3.3.9']
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '11'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ matrix.version }}
      - run: flutter pub get
      - name: Build windows
        run: flutter build windows
        working-directory: example

  build_ios:
    name: Build iOS
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'ci:skip') }}
    strategy:
      matrix:
        version: ['2.10.5', '3.0.0', '3.3.9']
    runs-on: macos-11
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v1
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ matrix.version }}
      - run: flutter pub get
      - name: Run flutter build ios --no-codesign
        run: flutter build ios --no-codesign
        working-directory: example

  build_macos:
    name: Build macOS
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'ci:skip') }}
    strategy:
      matrix:
        version: ['2.10.5', '3.0.0', '3.3.9']
    runs-on: macos-11
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v1
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ matrix.version }}
      - run: flutter pub get
      - run: flutter config --enable-macos-desktop
      - name: Run flutter build macos
        run: flutter build macos
        working-directory: example

  build_android_windows:
    name: Build Android on Windows
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'ci:skip') }}
    strategy:
      matrix:
        version: ['2.10.5', '3.0.0', '3.3.9']
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '11'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ matrix.version }}
      - run: flutter pub get
      - name: Run flutter build apk
        run: flutter build apk
        working-directory: example

  build_android_ubuntu:
    name: Build Android on Ubuntu
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'ci:skip') }}
    strategy:
      matrix:
        version: ['2.10.5', '3.0.0', '3.3.9']
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '11'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ matrix.version }}
      - run: flutter pub get
      - name: Run flutter build apk
        run: flutter build apk
        working-directory: example

  run_flutter_unit_test:
    name: Run flutter unit test
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'ci:skip') }}
    strategy:
      matrix:
        version: ['2.10.5', '3.0.0', '3.3.9']
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '11'
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ matrix.version }}
      - run: flutter packages get
      - run: flutter test